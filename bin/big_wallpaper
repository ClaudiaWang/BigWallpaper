#!/usr/bin/python
# -*- coding: utf-8 -*-
#
#    Copyright 2012-2013, Yale Huang, yale.huang@trantect.com
#
#    This file is part of BigWallpaper.
#
#    Pyrit is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    Pyrit is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with BigWallpaper.  If not, see <http://www.gnu.org/licenses/>.

from gi.repository import Gtk, GObject

import os
import sys
import dbus.service

from big_wallpaper.wallpaper_manager import WallPaperManager
from big_wallpaper.ui_controller import UIController
from big_wallpaper.config import Config
from big_wallpaper import models
from big_wallpaper.wallpaper_log import WallPaperLog

class UpdateTimer:
    def __init__(self, interval=1800000):
        self.interval = interval
        self.timer_id = GObject.timeout_add(interval, self.on_timer)

    def on_timer(self):
        global manager

        if manager is not None:
            manager.update()

        return True # continue

DBUS_APPNAME='com.trantect.BigWallpaper'
DB_FILENAME='big_wallpaper.db'

class DBusService(dbus.service.Object):
    def __init__(self):
        name = dbus.service.BusName(DBUS_APPNAME, bus = dbus.SessionBus())
        dbus.service.Object.__init__( self, name, 
                                      "/com/trantect/BigWallpaper")
    
    @dbus.service.method(dbus_interface=DBUS_APPNAME)
    def run(self):
        self.app.window.present()

if __name__ == "__main__":
    global manager, timer, ui_controller, config
    
    config = Config(sys.argv)
    WallPaperLog.init( WallPaperLog, config.get_options().logpath)
    if dbus.SessionBus().request_name(DBUS_APPNAME) != \
            dbus.bus.REQUEST_NAME_REPLY_PRIMARY_OWNER:
        WallPaperLog.getInstance(WallPaperLog).info("Application already running!")
        exit(1)

    if not os.path.exists(config.get_options().dest):
        os.makedirs(config.get_options().dest)

    models.connect_db("%s/%s" % (config.get_options().dest, DB_FILENAME))

    GObject.threads_init()
    manager = WallPaperManager( \
        config,
        prefix_dir = os.path.expanduser(config.get_options().prefix),
        img_dir=os.path.expanduser(config.get_options().dest))

    timer = UpdateTimer(interval=config.get_options().interval)
    ui_controller = UIController(manager, config,
                                 icon_dir = os.path.expanduser( \
            config.get_options().prefix+"/pixmaps"))

    manager.correct_link()
    Gtk.main()
